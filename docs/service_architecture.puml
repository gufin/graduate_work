@startuml
frame "UGC" as ugc_service {
    database "Kafka" as kafka
    database "Mongo UGC" as mongo_ugc
}
frame "Auth service" as auth_service
frame "Async API service" as async_api_service  {
    frame "Elastic search" as es
}

frame "User profile service" as user_profile_service {
    frame "Fast API" as user_profile_api
    database "Postgres" as user_profile_db
}

frame "ETL Service" as etl_service {
    frame "Elastic search" as es {
        database "users_index"
    }
    database "Mongo UGC" as mongo_ugc
}

frame "ETL Service" as etl_service {
    frame "Elastic search" as es {
        database "users_index"
    }
}

frame "Admin panel" as admin_panel

actor "User" as User
actor "Admin" as Admin

User --> user_profile_service : "При регистрации пользователя передаем его ID полученный на 1 шаге в сервисе авторизации и на втором шаге передаем в сервис профилей пользователей ФИО и контактный номер"
kafka --> user_profile_service: "Передаем данные о лайках, рецензиях и закладках с ID пользователя и movie_id"
async_api_service --> user_profile_service: "Получаем movie_id понравившихся фильмов"
user_profile_service --> kafka: "Все данные о пользователе"
kafka --> admin_panel

user_profile_api --> user_profile_db

User <-- user_profile_service: "Чувствительная информация: ФИО, номер телефона"
User <-- async_api_service: "Получаем данные о лайках, рецензиях и закладках по movie_id полученным в Async API service"
Admin <-- admin_panel: "Данные о пользователе: ФИО, номер телефона"

@enduml